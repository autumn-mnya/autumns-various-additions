By Wistil

Here's info for the TSC commands.  Basic setup is the command name, the number of arguments it takes,
a short name for the command, and a description of what it does.  I have personally kept the short
names in such a way that the names match fairly well with the command code.  That way when I read
<MYB I think MY Bump and not Player Bump which makes more sense to me.


The following descriptions are used by CE to display information more useful for the current parameters
entered for a command.  These ids are NOT editable.
a	arms
A	ammo
d	direction
e	event
E	equip
f	face
F	flag
g	graphic
l	illustration
L	Layer
i	item
m	map
u	music
N	npc (specific)
n	npc type
s	sound
t	tile
v	variable
x	x coord
y	y coord
#	number
.	ticks

Tab and newline are token delimeters...
TSC List revised by Jackalope and Lace

Format:
[command name, starts with <]	[number of arguments]	[parameter types, shown above]	[command name]	[command description] [1 if command ends event, 0 otherwise]	[1 if command clears textbox, 0 otherwise]	[1 if args are seperated, 0 otherwise]	[length of each parameter]

Autumn's Various Additions version of Booster's Lab also includes other custom TSC commands from other DLLs / Assembly hacks.
They all come in their own alphabetically sorted sections one after another, anything that isn't the Autumns Various Additions dll will have a note telling you what it's from. (Example: [Custom DLL], [Custom ASM Hack])

NOTE: If you add a command, make sure to increase the number next to BL_TSC by 1!
[BL_TSC]	143
<AE+	0	----	Arms Energy +	Refill all weapon ammo.	0	0	1	4	4	4	4
<AM+	2	aA--	ArMs +	Give weapon W with X ammo. Use 0000 for infinite ammo.	0	0	1	4	4	4	4
<AM-	1	a---	ArMs -	Remove weapon W.	0	0	1	4	4	4	4
<AMJ	2	ae--	ArMs Jump	Jump to event X if the PC has weapon W.	0	0	1	4	4	4	4
<ANP	3	N#d-	Animate NPc	Give all entities W scriptstate X and direction Y. Used for animation.	0	0	1	4	4	4	4
<BOA	1	#---	BOss Animation	Give map-boss (eg Omega) scriptstate W	0	0	1	4	4	4	4
<BSL	1	N---	Boss Script Load	Start boss fight with entity W. Use 0000 to end the boss fight.	0	0	1	4	4	4	4
<CAT	0	----	(C?) All Text	Instantly display text. Use before a <MSG/2/3; works until <END. Same command as <SAT.	0	0	1	4	4	4	4
<CIL	0	----	Clear ILlustration	Clear illustration (during credits).	0	0	1	4	4	4	4
<CLO	0	----	CLOse	Close message box.	0	0	1	4	4	4	4
<CLR	0	----	CLeaR	Clear message box.	0	1	1	4	4	4	4
<CMP	3	xyt-	Change MaP	tile Change the tile at coordinates W:X to type Y. Produces smoke.	0	0	1	4	4	4	4
<CMU	1	u---	Change MUsic	Change music to song W.	0	0	1	4	4	4	4
<CNP	3	Nnd-	Change NPc	Change all entities W to type X with direction Y.	0	0	1	4	4	4	4
<CPS	0	----	Clear Prop. Sound	Stops the propeller sound.	0	0	1	4	4	4	4
<CRE	0	----	CREdits	Rolls credits.	0	0	1	4	4	4	4
<CSS	0	----	Clear Stream Sound	Stops the stream sound.	0	0	1	4	4	4	4
<DNA	1	n---	Delete Npc (All?)	Remove all entities of type W.	0	0	1	4	4	4	4
<DNP	1	N---	Delete NPc	Remove all entities W.	0	0	1	4	4	4	4
<ECJ	2	#e--	Event Check Jump	Jump to event X if any entities W exist.	0	0	1	4	4	4	4
<END	0	----	END	End the current scripted event.	1	0	1	4	4	4	4
<EQ+	1	E---	EQuip +	Equip item W.	0	0	1	4	4	4	4
<EQ-	1	E---	EQuip -	Dequip item W.	0	0	1	4	4	4	4
<ESC	0	----	ESCape	Quit to title screen.	1	0	1	4	4	4	4
<EVE	1	e---	EVEnt	Go to event W.	1	0	1	4	4	4	4
<FAC	1	f---	FACe	Show face W in the message box.	0	0	1	4	4	4	4
<FAI	1	d---	FAde In	Fade in with direction W.	0	0	1	4	4	4	4
<FAO	1	d---	FAde Out	Fade out with direction W.	0	0	1	4	4	4	4
<FL+	1	F---	FLag +	Set flag W. Using flags over 8000 is inadvisable.	0	0	1	4	4	4	4
<FL-	1	F---	FLag -	Clear flag W.	0	0	1	4	4	4	4
<FLA	0	----	FLAsh	Flash the screen white.	0	0	1	4	4	4	4
<FLJ	2	Fe--	FLag Jump	Jump to event X if flag W is set.	0	0	1	4	4	4	4
<FMU	0	----	Fade MUsic	Fade the music out.	0	0	1	4	4	4	4
<FOB	2	N.--	Focus On Boss	Focus on boss W in X ticks. Use X > 0.	0	0	1	4	4	4	4
<FOM	1	.---	Focus On Me	Focus on the PC in W ticks. Use W > 0.	0	0	1	4	4	4	4
<FON	2	N.--	Focus On Npc	Focus on entity W in X ticks. Use X > 0.	0	0	1	4	4	4	4
<FRE	0	----	FREe	Free game action and the PC.	0	0	1	4	4	4	4
<GIT	1	g---	Graphic ITem	Display an item or weapon icon above the message box. Add 1000 to W for items. Use 0000 to remove.	0	0	1	4	4	4	4
<HMC	0	----	Hide My Character	Hide the PC.	0	0	1	4	4	4	4
<INI	0	----	INItialize	Reset memory and restart game.	1	0	1	4	4	4	4
<INP	3	Nnd-	(Initialize?) NPc	Change entity W to type X with direction Y and set entity flag 100 (0x8000).	0	0	1	4	4	4	4
<IT+	1	i---	ITem +	Give item W.	0	0	1	4	4	4	4
<IT-	1	i---	ITem -	Remove item W.	0	0	1	4	4	4	4
<ITJ	2	ie--	ITem Jump	Jump to event X if the PC has item W.	0	0	1	4	4	4	4
<KEY	0	----	KEY lock	Lock player controls and hide status bars until <END.	0	0	1	4	4	4	4
<LDP	0	----	LoaD Profile	Load the saved game.	1	0	1	4	4	4	4
<LI+	1	#---	LIfe +	Recover W health.	0	0	1	4	4	4	4
<ML+	1	#---	Max Life +	Increase the current and maximum health by W.	0	0	1	4	4	4	4
<MLP	0	----	Map (LP?)	Display a map of the current area.	0	0	1	4	4	4	4
<MM0	0	----	My Motion 0	Halt the PC's forward motion.	0	0	1	4	4	4	4
<MNA	0	----	Map NAme	Display the map name.	0	0	1	4	4	4	4
<MNP	4	Nxyd	Move NPc	Move entity W to coordinates X:Y with direction Z.	0	0	1	4	4	4	4
<MOV	2	xy--	MOVe	Move the PC to coordinates W:X.	0	0	1	4	4	4	4
<MPJ	1	e---	MaP Jump	Jump to event W if the map flag for the current area is set.	0	0	1	4	4	4	4
<MP+	1	#---	MaP +	Set map flag W. Map flags cannot be unset. Highest usable flag is 127.	0	0	1	4	4	4	4
<MS2	0	----	MeSsage 2	Open an invisible message box at the top of screen.	0	1	1	4	4	4	4
<MS3	0	----	MeSsage 3	Open a message box at the top of screen.	0	1	1	4	4	4	4
<MSG	0	----	MeSsaGe	Open a message box at the bottom of the screen.	0	1	1	4	4	4	4
<MYB	1	d---	MY Bump	Causes the PC to hop in the direction opposite of W. Using up or down causes the jump to be vertical.	0	0	1	4	4	4	4
<MYD	1	d---	MY Direction	Causes the PC to face direction W.	0	0	1	4	4	4	4
<NCJ	2	ne--	Npc Check Jump	Jump to event X if any entity of type W exists.	0	0	1	4	4	4	4
<NOD	0	----	NOD	Wait for player input before resuming script.	0	0	1	4	4	4	4
<NUM	1	#---	NUMber	Prints the value [4a5b34+W*4] to the message box. Use 0000 to print the last used W from compatible commands (eg AM+).	0	0	1	4	4	4	4
<PRI	0	----	PRevent Interaction	Lock player controls and freeze game action.	0	0	1	4	4	4	4
<PS+	2	#m--	Portal Slot +	Set teleporter slot W to event X. Selecting slot W while using the teleporter menu will jump to event X.	0	0	1	4	4	4	4
<QUA	1	.---	QUAke	Shake the screen for W ticks.	0	0	1	4	4	4	4
<RMU	0	----	Restore MUsic	Resume the song last played.	0	0	1	4	4	4	4
<SAT	0	----	Speed-up All Text	Instantly display text. Use before a <MSG/2/3; works until <END. Same command as <CAT.	0	0	1	4	4	4	4
<SIL	1	l---	Show ILlustration	Show illustration W (during credits).	0	0	1	4	4	4	4
<SK+	1	F---	SKipflag +	Set skipflag W.	0	0	1	4	4	4	4
<SK-	1	F---	Skipflag -	Clear skipflag W.	0	0	1	4	4	4	4
<SKJ	2	Fe--	SKipflag Jump	Jump to event X if skipflag W is set.	0	0	1	4	4	4	4
<SLP	0	----	Show Location Portals	Show the teleporter menu.	0	0	1	4	4	4	4
<SMC	0	----	Show My Character	Unhides the PC.	0	0	1	4	4	4	4
<SMP	2	xy--	Shift MaP	tile Subtract 1 from the tile type at coordinates W:X. Does not create smoke.	0	0	1	4	4	4	4
<SNP	4	nxyd	Set NPc	Create an entity of type W at coordinates X:Y with direction Z.	0	0	1	4	4	4	4
<SOU	1	s---	SOUnd	Play sound effect W.	0	0	1	4	4	4	4
<SPS	0	----	Start Propeller Sound	Start the propeller sound.	0	0	1	4	4	4	4
<SSS	1	#---	Start Stream Sound	Start the stream sound with volume W.	0	0	1	4	4	4	4
<STC	0	----	Save Time Counter	Saves current time to 290.rec.	0	0	1	4	4	4	4
<SVP	0	----	SaVe Profile	Saves current game.	0	0	1	4	4	4	4
<TAM	3	aaA-	Trade ArMs	Trade weapon W for weapon X and set max ammo to Y. Use 0000 to keep the same amount of ammo.	0	0	1	4	4	4	4
<TRA	4	mexy	TRAnsport	Travel to map W, run event X, and move the PC to coordinates Y:Z.	1	0	1	4	4	4	4
<TUR	0	----	Text UnRead?	Instantly display text. Use after a <MSG/2/3; works until another <MSG/2/3 or an <END.	0	0	1	4	4	4	4
<UNI	1	#---	UNIt	Set character movement type. Use 0000 for normal, 0001 for zero-G and 0002 to disallow movement.	0	0	1	4	4	4	4
<UNJ	2	#e--	UNit Jump	Jump to event X if movement is of type W (0000 for normal, 0001 for zero-G).	0	0	1	4	4	4	4
<WAI	1	.---	WAIt	Pause script for W ticks.	0	0	1	4	4	4	4
<WAS	0	----	WAit until Standing	Pause script until character is on ground.	0	0	1	4	4	4	4
<XX1	1	l---	XX1	Show the island falling in manner W. Use 0000 to have it crash and 0001 to have it stop midway.	0	0	1	4	4	4	4
<YNJ	1	e---	Yes/No Jump	Prompt Yes/No; jump to event W if No is selected.	0	0	1	4	4	4	4
<ZAM	0	----	Zero ArMs	Sets all weapon energy to zero.	0	0	1	4	4	4	4
<BKD	1	#---	BacKground Disable	Disable <BKG layer W. Doesn't do anything if <BKG wasn't used.	0	0	1	4	4	4	4
<BKE	1	#---	BacKground Enable	Enable <BKG layer W. Doesn't do anything if <BKG wasn't used.	0	0	1	4	4	4	4
<BKG	0	----	BacKGround	(Check TSC command txt!!) Load Background txt file from data/bkg. Use $ at the end of the name to mark the end of the text input.	0	1	1	4	4	4	4
<BKP	3	###-	BacKground Parameter	Set <BKG parameter X for layer W to value Y.	0	0	1	4	4	4	4
<BKR	0	----	BacKground Reset	Disables <BKG. This will keep the <BKG background file though. <BKG will auto reset on <TRA as well.	0	0	1	4	4	4	4
<BUY	2	#e--	BUY jump	Jump to event X if player doesn't have W amount of money. Continue and remove W money otherwise.	0	0	1	4	4	4	4
<BY2	2	#e--	BuY jump 2	Jump to event X if player has W amount of money or more, and remove W amount of money. Continue otherwise.	0	0	1	4	4	4	4
<CBK	0	----	Change BacKground	Change vanilla background to image A with type B. Use $ at the end of both strings to mark the end of the text input (Check TSC command txt for more).	0	1	1	4	4	4	4
<CO+	2	##--	COllectables +	Add collectables amount X to collectable variable W. (Check TSC command txt)	0	0	1	4	4	4	4
<CO-	2	##--	COllectables -	Subtract collectables amount X from collectable variable W. (Check TSC command txt)	0	0	1	4	4	4	4
<COD	1	#---	COllectable Disable	Disables the display of collectable variable W.	0	0	1	4	4	4	4	
<COE	1	#---	COllectable Enable	Enables the display of collectable variable W.	0	0	1	4	4	4	4	
<COJ	3	##e-	COllectable Jump	Jump to event Y if the player has X amount of collectables or more in variable W.	0	0	1	4	4	4	4
<CSF	0	----	Change Surface File	Change surface ID string to load image string. Use $ at the end of both strings to mark the end of the text input (Check TSC command txt for more).	0	1	1	4	4	4	4
<CTS	0	----	Change TileSet	Change tileset loaded. Use $ at the end of the tileset name to mark the end of the text input. Do not include "Prt".	0	1	1	4	4	4	4
<FM2	4	.###	Focus on Me 2	Focus on the PC in W ticks (Use W > 0), with Mode X (Check TSC command txt), with Offset Y:Z.	0	0	1	4	4	4	4
<FN2	2	N.--	Focus on Npc 2	Same as <FON but the players direction can effect the Camera.	0	0	1	4	4	4	4
<FNJ	2	Fe--	Flag Not Jump	Opposite of <FLJ. Jump to event X if flag W is not set.	0	0	1	4	4	4	4
<FOC	3	.xy-	Focus On Coordinates	Focus on Coordinates X:Y in W ticks. Use W > 0.	0	0	1	4	4	4	4
<IMF	0	----	IMage Folder	Set a subfolder for <IMG to load from. Use $ at the end of the folder name to mark the end of the text input (Check TSC command txt for more).	0	1	1	4	4	4	4
<IMG	0	----	IMaGe display	Show an image on screen. Use $ at the end of the image name to mark the end of the text input (Check TSC command txt for more).	0	1	1	4	4	4	4
<IPH	0	----	Initialize PHysics	Resets the physics values for the player (<PHY) back to the ones set in settings.ini.	0	0	1	4	4	4	4
<LDR	2	#d--	Lock DiRection	Lock Direction when using <FM2 Camera (Check TSC command txt).	0	0	1	4	4	4	4
<LSC	0	----	Load SCript	Load TSC script and run event 0 afterwards. Use $ at the end of the script name to mark the end of the text input.	0	1	1	4	4	4	4
<MIM	1	#---	MIMiga mask	Move the MyChar spritesheet down by W spritesets. 	0	0	1	4	4	4	4
<ML-	1	#---	Max Life -	Decrease the current and maximum health by W.	0	0	1	4	4	4	4
<MS4	0	----	MeSsage 4	Open an invisible message box at the bottom of screen.	0	1	1	4	4	4	4
<RNJ	2	ee--	Random Number Jump	Jump to Random Event between W and X. Min to Max.	0	0	1	4	4	4	4
<PHY	2	##--	PHYsics set	Change physics of type W to value X.	0	0	1	4	4	4	4
<SEL	1	#---	SELl (money+)	Increase amount of money by W.	0	0	1	4	4	4	4
<SL=	1	#---	SeLl =	Set amount of money to W.	0	0	1	4	4	4	4
<SNJ	2	Fe--	Skipflag Not Jump	Opposite of <SKJ. Jump to event X if skipflag W is not set.	0	0	1	4	4	4	4
<SWN	0	----	Set Window Name	Set the games Window Name in TSC. Use $ at the end of the window name to mark the end of the text input.	0	1	1	4	4	4	4
<TRM	4	mexy	TRansport Momentum	Same as <TRA but keep X/Y momentum between transition.	1	0	1	4	4	4	4
<TRX	2	me--	TRansport keep X:y	Same as <TRA but cut out the last 2 arguments and keep X/Y position between transition. Somewhat buggy (Check TSC command txt).	1	0	1	4	4	4	4
<VAR	2	v#--	VARiable set	Set Variable W to X. (Check TSC command txt).	0	0	1	4	4	4	4
<VA+	2	v#--	VAriable +	Add value X to variable W. (Check TSC command txt).	0	0	1	4	4	4	4
<VA-	2	v#--	VAriable -	Subtract value X from variable W. (Check TSC command txt).	0	0	1	4	4	4	4
<VA*	2	v#--	VAriable *	Multiply variable W by value X. (Check TSC command txt).	0	0	1	4	4	4	4
<VA/	2	v#--	VAriable /	Divide variable W by value X. (Check TSC command txt).	0	0	1	4	4	4	4
<VAJ	4	###e	VAriable Jump	Compare number W to number X (Not variables!!) using compare method Y. Jump to event Z if true (Check TSC command txt).	0	0	1	4	4	4	4
<VAZ	2	vv--	VAriable Zero	Set X amount of variables to 0, starting at variable W. (Check TSC command txt).	0	0	1	4	4	4	4
<VND	3	##v-	Variable raNDom	Generates a random number between W and X. Sets variable Y to the result number (Check TSC command txt).	0	0	1	4	4	4	4
<VIJ	3	v#e-	Variable Increment Jump	Increments variable W by 1. If W is greater than or equal to X, set variable W to 0 and jump to event Y (Check TSC command txt).	0	0	1	4	4	4	4
<WCL	0	----	Write CaLl	Replace function call A with function call B (Check TSC command txt).	0	0	1	4	4	4	4
<CEV	1	#---	Change fmod EVent	[FMOD DLL] Change FMod Event to group W. Use this before trying to play something that isn't in the default Music group.	0	0	1	4	4	4	4
<CVP	0	----	Change fmod eVent Parameter	[FMOD DLL] Change FMod Event Parameter <EVP will modify. Use $ at the end of the parameter name to mark the end of the text input.	0	1	1	4	4	4	4
<EVP	1	#---	fmod EVent Parameter	[FMOD DLL] Set FMod Event Parameter (Parameter name set by <CVP) to W.	0	0	1	4	4	4	4
<PEV	0	----	Play fmod EVent	[FMOD DLL] Play FMod Event. Use $ at the end of the event name to mark the end of the text input.	0	1	1	4	4	4	4
<SEV	1	#---	Stop fmod EVent	[FMOD DLL] Stop FMod Event in group W. Use 0 for the default Music group.	0	0	1	4	4	4	4
<CML	4	Lxyt	Change Map Layer	[LAYERS MOD] Change the tile on layer W at coordinates X:Y to type Z. Produces smoke.	0	0	1	4	4	4	4
<SML	2	Lxy-	Shift Map Layer	LAYERS MOD] Subtract 1 from the tile type on layer W at coordinates X:Y. Does not create smoke.	0	0	1	4	4	4	4