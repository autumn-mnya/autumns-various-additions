The "Autumns Various Additions" dll adds various new TSC commands into the game. They are explained better here!

# TSC Commands #

- <BKE - BacKGround Enable
Enable <BKG layer W. Layer 0 is the first <BKG layer. -- Doesn't do anything if <BKG wasn't used!
Arguments: 1 [<BKEwwww] [layer]

- <BKD - BacKGround Disable
Disable <BKG layer W. Layer 0 is the first <BKG layer. -- Doesn't do anything if <BKG wasn't used!
Arguments: 1 [<BKDwwww] [layer]

- <BKG - BacKGround
Load Background txt file from data/bkg. -- End the text string with a $ so the game knows to stop reading the text.
Arguments: 1 [<BKGstring$] [background$]
Example: <BKGbkMoon$
( The above will load bkMoon.txt )

# BKG Readme #

<BKG is a massive hack that can change how you create backgrounds in Cave Story.

It's incredibly complex though, as it has many moving parts. I'll try to explain most of them here!

<BKG loads a txt file from the "data/bkg" folder. This txt file contains the name of the background you want to display, and all of the layers you want your background to have.
You can see the "CustomTSC_BKG_Format" and "CustomTSC_BKG_Example" txt files for both an example of a <BKG txt file, and also the format of understanding which values do what.

Read "CustomTSC_BKG_Explanation.txt" for more info on <BKG itself.

- <BKP - BacKGround Parameter
Set parameter X for layer W to value Y. Layer 0 is the first <BKG layer.
Arguments: 3 [<BKPwwww:xxxx:yyyy] [layer:parameter:value]
Example <BKP0000:0008:0008

#############################################################################
#                            Parameters for <BKP                            #
# 0 - Bitmap X Offset
# 1 - Bitmap Y Offset
# 2 - Bitmap Width
# 3 - Bitmap Height
# 4 - Repeat X
# 5 - Repeat Y
# 6 - Repeat Gap X
# 7 - Repeat Gap Y
# 8 - Type
# 9 - Horizontal Scroll Speed (divided by 10 because decimals, 0001 = 0.1!)
# 10 - Vertical Scroll Speed (divided by 10 because decimals, 0001 = 0.1!)
# 11 - Sprite Number
# 12 - Animation Speed
# 13 - Map X Offset (amount of tiles, not pixels)
# 14 - Map Y Offset (amount of tiles, not pixels)
#                                                                           #
#############################################################################

- <BKR - BacKground Reset
Disables <BKG. This will keep the <BKG background file though. <BKG will auto reset on <TRA as well!!
Arguments: 0

- <BUY - BUY jump
[This TSC command is only useful when the money code is enabled in settings.ini.]
This command will jump to event X if the player doesn't have W money. Otherwise, it will continue the current event and remove W money.
Arguments: 2 [<BUYwwww:xxxx] [money:event]

- <BY2 - BuY jump 2
[This TSC command is only useful when the money code is enabled in settings.ini.]
This command will jump to event X if the player has W money, and will remove X money as well. Otherwise, it will continue the current event.
Arguments: 2 [BY2wwww:xxxx] [money:event]

- <SEL - SELl (Add money)
[This TSC command is only useful when the money code is enabled in settings.ini.]
This command will add money W to the players money amount.
Arguments: 1 [<SELwwww] [money]

- <SL= - SeLl = (Set money)
[This TSC command is only useful when the money code is enabled in settings.ini.]
This command will set the players money amount to W.
Arguments: 1 [<SL=wwww] [money]

- <CO+ - COllectables + (Add Collectable)
Add collectables amount X to collectable variable W. There are 5 collectable variables. 0 is the first one, and 4 is the last one. Any higher and it'll just effect 0.
Arguments: 2 [<CO+wwww:xxxx] [variable:value]

- <CO- - COllectables - (Subtract Collectable)
Subtract collectables amount X from collectable variable W. There are 5 collectable variables. 0 is the first one, and 4 is the last one. Any higher and it'll just effect 0.
Arguments: 2 [<CO-wwww:xxxx] [variable:value]

- <COD - COllectable Disable (Disable Collectable Displaying)
Disables collectable variable W from displaying on screen. There are 5 collectable variables. 0 is the first one, and 4 is the last one. Any higher and it'll just effect 0.
Arguments: 1 [<CODwwww] [variable]

- <COE - COllectable Enable (Enable Collectable Displaying)
Enables collectable variable W from displaying on screen. There are 5 collectable variables. 0 is the first one, and 4 is the last one. Any higher and it'll just effect 0.
Arguments: 1 [<COEwwww] [variable]

- <COJ - COllectable Jump (Jump to event when player has collectables)
Jump to event Y if the player has X amount of collectables or more in variable W. There are 5 collectable variables. 0 is the first one, and 4 is the last one. Any higher and it'll just effect 0.
Arguments: 3 [<COJwwww:xxxx:yyyy] [variable:value:event]

- <CSF - Change Surface File
Change surface ID (string) to load image name (string), meaning you can load whatever image you want in place of another. Use npcSurfaceList.txt included in Booster's Lab as a reference. DO NOT GO ABOVE 40.
Arguments: 2 [<CSFstring$string2$] [id_string$filename_string$]
Example: <CSF28$bkFog$
( The above will replace Surface ID 28 (Level Background) with image "bkFog" )

- <CTS - Change TileSet
Load new tileset instead of the current one. Do not include "Prt" in your filename for the command!
Arguments: 1 [<CTSstring$] [tileset$]
Example: <CTSOside$
( The above will load PrtOside with pxa file Oside.pxa )

- <FM2 - Focus on Me 2

This TSC command allows you to focus the camera on the player with a custom offset!
The 2nd argument is a custom "mode" field. It is explained below.
Arguments: 4 [<FM2wwww:zzzz:xxxx:yyyy] [wait:mode:x_offset:y_offset]

########################################
#            Modes for <FM2            #
# 0 - X/Y offset are positive values   #
# 1 - X offset is a negative value     #
# 2 - Y offset is a negative value     #
# 3 - Both offsets are negative values #
########################################

- <FN2 - Focus on Npc 2
Same as <FON, except the player can still effect the camera depending on where they're facing.
Arguments: 2 [<FN2wwww:zzzz] [npc:wait]

- <FNJ - Flag Not Jump
Same as <FLJ, except it jumps to an event if the flag is NOT set.
Arguments: 2 [<FNJwwww:zzzz] [flag:event]

- <FOC - Focus On Coordinates
Focus the Camera at an X:Y position on the map.
Arguments: 3 [<FOCwwww:xxxx:yyyy] [wait:x:y]

- <LDR - Lock DiRection
Only when <FM2 has been used -- This can lock the players direction they're facing.
Arguments: 2 [<LDRwwww:zzzz] [mode:direction]

######################################
#          Modes for <LDR            #
# 0 - Unlock the Camera              #
# 1 - Lock the Camera in direction Y #
######################################
#        Directions for <LDR         #
# 0 - Lock the Camera Leftwards      #
# 1 - Lock the Camera Upwards        #
# 2 - Lock the Camera Rightwards     #
# 3 - Lock the Camera Downwards      #
# 4 - Player Can't Impact Direction  #
######################################

- <LSC - Load SCript
Load TSC Script and run event 0 afterwards. -- End the text string with a $ so the game knows to stop reading the text.
Arguments: 1 [<LSCstring$] [script$]
Example: <LSCPens1$
( The above will load Pens1.tsc )

- <IMF - IMage Folder
Set a subfolder for <IMG to load from. Default folder is "data/Image" -- End the text string with a $ so the game knows to stop reading the text.
[ IMPORTANT: Using "<IMF$" will disable loading from a subfolder ! ]
[ IMPORTANT: Must be less than or equal to 48 characters in length! ]
Arguments: 1 [<IMFstring$] [directory$]
Example: <IMFautumnhazel$

- <IMG - IMaGe
Load a 320x340 image onto the whole screen. Default folder is "data/Image" -- End the text string with a $ so the game knows to stop reading the text.
[ IMPORTANT: Always have a 0.bmp available as the "0" <IMG is shown on screen at all times! ]
[ IMPORTANT: Must be less than or equal to 50 characters in length! ]
Arguments: 1 [<IMGstring$] [image$]
Example: <IMGglyph$
( You can set a flag to make the image appear *above* the textbox instead of behind it. The default is 6503, you can change this in the dll's settings.ini )

- <RNJ - Random Number Jump
Jump to a random event between W and Z.
Arguments: 2 [<RNJwwww:zzzz] [event_min:event_max]

- <SNJ - Skipflag Not Jump
Same as <SKJ, except it jumps to an event if the skipflag is NOT set.
Arguments: 2 [<SNJwwww:zzzz] [skipflag:event]

- <SWN - Set Window Name
Set the Window Name to a text string -- End the text string with a $ so the game knows to stop reading the text.
Arguments: 1 [<SWNstring$] [window_name$]
Example: <SWNCave Story ~ Doukutsu Monogatari$

- <TRM - TRansport Momentum

This TSC command is the same as <TRA, except you maintain your momentum when used. It was used in Autumn's mod "Bliss".
Arguments: 4 [<TRMwwww:zzzz:xxxx:yyyy] [map:event:x:y]

- <TRX - TRansport keep X:y
This TSC command is the same as <TRA except is preserves the players X:Y position. You need to be closer to the center of the hitbox of whatever you're interacting with to get it to properly work, as this is somewhat buggy.
Arguments: 2 [<TRMwwww:zzzz] [map:event]

- <WCL - Write CaLl
Write a function call at address A to address B -- 2 text strings back-to-back, both ending with a $. The function address is a *hex value*.
Arguments: 2 [<WCLstring$cstring2$] [address_a_string$address_b_string$]
Example: <WCL423DE9$401000$
( The above will replace <CSS with the "ClearArmsData" function )